"use strict";function SwiftClick(t){function e(){"function"==typeof m&&(h.addEventListener("click",n,!1),h.onclick=null),h.addEventListener("touchstart",i,!1),h.addEventListener("click",c,!0)}function n(t){m(t)}function i(t){var e=t.target,n=e.nodeName.toLowerCase(),i=t.changedTouches[0];return"undefined"==typeof w.options.elements[n]||(!!v||(w.options.useCssParser&&f(e)?(C=!1,!0):(t.stopPropagation(),v=!0,y.x=i.pageX,y.y=i.pageY,k=a(),e.removeEventListener("touchend",o,!1),e.addEventListener("touchend",o,!1),e.removeEventListener("touchcancel",r,!1),void e.addEventListener("touchcancel",r,!1))))}function o(t){var e=t.target,n=t.changedTouches[0];return e.removeEventListener("touchend",o,!1),v=!1,!!u(n)||(t.stopPropagation(),t.preventDefault(),C=!1,e.focus(),s(e,n),!1)}function r(t){t.target.removeEventListener("touchcancel",r,!1),v=!1}function c(t){var e=t.target,n=e.nodeName.toLowerCase();if("undefined"!=typeof w.options.elements[n]){if(C)return C=!1,t.stopPropagation(),t.preventDefault(),!1;C=!0}}function s(t,e){var n=document.createEvent("MouseEvents");n.initMouseEvent("click",!0,!0,window,1,e.screenX,e.screenY,e.clientX,e.clientY,!1,!1,!1,!1,0,null),t.dispatchEvent(n)}function a(){var t={x:window.pageXOffset||document.body.scrollLeft||document.documentElement.scrollLeft||0,y:window.pageYOffset||document.body.scrollTop||document.documentElement.scrollTop||0};return t}function f(t){var e=t.parentNode,n=!1;if(d(t,l))return!0;if(d(t,p))return n;if(null===e)return n;for(;e;)d(e,l)?(e=null,n=!0):e=e.parentNode;return n}function u(t){var e=w.options.maxTouchDrift,n=a();return Math.abs(t.pageX-y.x)>e||Math.abs(t.pageY-y.y)>e||Math.abs(n.x-k.x)>e||Math.abs(n.y-k.y)>e}function d(t,e){var n="undefined"!=typeof t.className&&(" "+t.className+" ").indexOf(" "+e+" ")>-1;return n}if("undefined"!=typeof SwiftClick.swiftDictionary[t])return SwiftClick.swiftDictionary[t];SwiftClick.swiftDictionary[t]=this,this.options={elements:{a:"a",div:"div",span:"span",button:"button"},minTouchDrift:4,maxTouchDrift:16,useCssParser:!1};var l="swiftclick-ignore",p="swiftclick-force",w=this,h=t,m=h.onclick,v=!1,y={x:0,y:0},k={x:0,y:0},C=!1;"onorientationchange"in window&&"ontouchstart"in window&&e()}SwiftClick.swiftDictionary={},SwiftClick.prototype.setMaxTouchDrift=function(t){if("number"!=typeof t)throw new TypeError('expected "maxTouchDrift" to be of type "number"');t<this.options.minTouchDrift&&(t=this.options.minTouchDrift),this.options.maxTouchDrift=t},SwiftClick.prototype.addNodeNamesToTrack=function(t){var e=this;t.forEach(function(t){if("string"!=typeof t)throw new TypeError('all values within the "nodeNames" array must be of type "string"');var n=t.toLowerCase();e.options.elements[n]=n})},SwiftClick.prototype.replaceNodeNamesToTrack=function(t){this.options.elements={},this.addNodeNamesToTrack(t)},SwiftClick.prototype.useCssParser=function(t){this.options.useCssParser=t},SwiftClick.attach=function(t){return"undefined"!=typeof SwiftClick.swiftDictionary[t]?SwiftClick.swiftDictionary[t]:new SwiftClick(t)},"undefined"!=typeof define&&define.amd?define(function(){return SwiftClick}):"undefined"!=typeof module&&module.exports?module.exports=SwiftClick:window.SwiftClick=SwiftClick;